{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\filemedis\\\\tampilan\\\\src\\\\component\\\\radiobutton\\\\RadioGroup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport RadioButton from './RadioButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RadioGroup = _ref => {\n  _s();\n  let {\n    options,\n    defaultValue,\n    onChange\n  } = _ref;\n  const [selectedValue, setSelectedValue] = useState(defaultValue);\n  const handleRadioChange = event => {\n    const value = event.target.value;\n    setSelectedValue(value);\n    onChange(name, value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: options.map(option => /*#__PURE__*/_jsxDEV(RadioButton, {\n      value: option.value,\n      checked: selectedValue === option.value,\n      onChange: handleRadioChange,\n      name: name\n    }, option.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(RadioGroup, \"xngtgwxKOztc3DVC/eyDI+/6qFA=\");\n_c = RadioGroup;\nexport default RadioGroup;\nvar _c;\n$RefreshReg$(_c, \"RadioGroup\");","map":{"version":3,"names":["React","useState","RadioButton","jsxDEV","_jsxDEV","RadioGroup","_ref","_s","options","defaultValue","onChange","selectedValue","setSelectedValue","handleRadioChange","event","value","target","name","children","map","option","checked","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/filemedis/tampilan/src/component/radiobutton/RadioGroup.js"],"sourcesContent":["import React, {useState} from 'react'\r\nimport RadioButton from './RadioButton';\r\n\r\nconst RadioGroup = ({ options, defaultValue, onChange }) => {\r\n  const [selectedValue, setSelectedValue] = useState(defaultValue);\r\n\r\n  const handleRadioChange = (event) => {\r\n    const value = event.target.value;\r\n    setSelectedValue(value);\r\n    onChange(name, value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n         {options.map((option) => (\r\n        <RadioButton\r\n          key={option.value}\r\n          value={option.value}\r\n          checked={selectedValue === option.value}\r\n          onChange={handleRadioChange}\r\n          name={name}\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RadioGroup"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAU,GAAGC,IAAA,IAAyC;EAAAC,EAAA;EAAA,IAAxC;IAAEC,OAAO;IAAEC,YAAY;IAAEC;EAAS,CAAC,GAAAJ,IAAA;EACrD,MAAM,CAACK,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAACQ,YAAY,CAAC;EAEhE,MAAMI,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACD,KAAK;IAChCH,gBAAgB,CAACG,KAAK,CAAC;IACvBL,QAAQ,CAACO,IAAI,EAAEF,KAAK,CAAC;EACvB,CAAC;EAED,oBACEX,OAAA;IAAAc,QAAA,EACMV,OAAO,CAACW,GAAG,CAAEC,MAAM,iBACrBhB,OAAA,CAACF,WAAW;MAEVa,KAAK,EAAEK,MAAM,CAACL,KAAM;MACpBM,OAAO,EAAEV,aAAa,KAAKS,MAAM,CAACL,KAAM;MACxCL,QAAQ,EAAEG,iBAAkB;MAC5BI,IAAI,EAAEA;IAAK,GAJNG,MAAM,CAACL,KAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAMpB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV,CAAC;AAAAlB,EAAA,CAtBKF,UAAU;AAAAqB,EAAA,GAAVrB,UAAU;AAwBhB,eAAeA,UAAU;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}